//
자바스크립트 정리1  

1.변수

값의 위치를 가리키는 것을 의미한다.

하나의 값을 저장하기위함,여러 개의 값을 저장하려면 여러 개의 변수를 사용해야한다.
    단) 배열이나 객체같은 자료구조를 사용하면 관련이 있는 여러 개의 값을 묶어서 하나의 값처럼 사용할 수 있다.

EX) let result = 10+20; —->변수에 값을 저장하는것을 할당
      // let-변수선언
     //  result-변수이름—->식별자라고부름
    //   10+20-변수값

let result 라는 이름의 변수 선언
let result 선언과 동시에 초기화
let a,b ;  ->여러 변수를 한번에 선언
let a = 3, b=7; -> 여러 변수를 선언과동시에 초기화
a=3, b=7;  ->여러 변수를 한 번에 초기화

쉼표(,) 연산자를 사용해 여러 변수를 동시에 선언하고초기화가능

2.변수선언

let, const, function, clsaa... 키워드를 사용해서 변수를 선언한다.
let A -->변수선언
A=37 ; -->값의 할당
let A = 37; -->변수선언 과 값의할당

3.값의 재할당

현재 변수에 저장된 값을 버리고 새로운 값을 저장하는 것
값을 재할당할 수 없으면 상수라고 한다.
const로 선언한 변수는 재할당이 금지 된다.

let A = 37; -->변수 선언과 값의 할당
A = 20; --> 값의 재할당

4.배열(array)

이름과 인덱스로 참조되는 정렬된 값의 집합체 입니다.
배열을 구성하는 각각의 값을 배열요소(element)라고하며
배열에서 위치를 가리키는 숫자를 인덱스라고 한다.

배열의 특징

특정 배열 요소가 비어 있을 수도 있다
Array 객체로 다루어짐

배열을 만드는법

let arr = [element1,e2,...]; -->배열 리터럴을 이용하는 방법
let arr = Array(element1,e2,...)-->Array 객체를 이용하는 방법
let arr = new Array(element1,e2,...)-->new연산자를 이용한 Array객체 생성

배열의 참조

배열이름 [ 인덱스 ]

let arr = ["phill"]; -->요소가 하나뿐인 배열을 생성함
let element = arr[0]; -->배열의 첫 번쨰 요소를 읽고 대입함
arr[1] = 10; -->배열의 두 번쨰 요소에 숫자 10을 대입, 배열 길이는
                         1에서 2로 늘어남
arr[2] = element; -->배열의 세 번쨰 요소에 변수 element의 값을
                                  대입,배열의 길이는 2에서 3으로 늘어남.

배열 요소 추가

arr.push(추가할 요소); -->push()매소드를 이용
arr[arr.length] = 추가할 요소; -->lenghth 프로퍼티 이용
arr[특정인덱스] = 추가할 요소; -->특정 인덱스를 지정하여 추가
Push,lenghth—->배열에 제일 끝에 새로운 요소 추가


let arr = [1,true,"js"]

arr.push("phill")
document.write(arr + "<br>"); --> 1,true,js,phill

arr[arr.length] = 100;

arr[10] = "안녕하신가"

https://www.tcpschool.com/javascript/js_array_basic

5.자바스크리브 arry 객체 

Array.isArray() 메소드
Array.isArray() 메소드는 전달받은 값이 Array 객체인지 아닌지 검사함

EX)

Array.isArray([]);          // true
Array.isArray(new Array()); // true—>??
Array.isArray(123);         // false—>숫자는 객체에 제외
Array.isArray("Array");     // false—>문자열은 객체에 제외
Array.isArray(true);        // false—>???

Array.from()매소드
객체들은 배열처럼 변환시켜 줌

     function arrayFrom() {
                 return Array.from(arguments);
     }

     Array.from(arrayFrom(1, 2, 3));        // [1, 2, 3]
     var myMap = new Map([[1, 2], [3, 4]]);
     Array.from(myMap);                     // [1, 2, 3, 4]
     Array.from("JavaScript");              // [J,a,v,a,S,c,r,i,p,t]

     Array.of() 메소드—>인수로 전달받은 값을 가지고 새로운 Array인스턴스를 생성합

    new Array(10); // [,,,,,,,,,] -> 10개의 배열 요소를 가지는 빈 배열을 생성함.
    Array.of(10);  // [10] -> 한 개(숫자 10)의 배열 요소를 가지는 배열을 생성함.

7.전역변수
자바스크립트 코드내의 어느 곳에서나 접근할 수 있는 변수

전역변수를 만드는 예)
-선언하지 않고 직접 사용함
-var로 선언시 함수 밖에서 선언 함
-let으로 선언시 블럭 밖에서 선언함

Name = “차필우”;
// 함수 밖에서 선언된 전역 변수는 실제로 window객체의 프로퍼티 입니다.

Console.log(window.name);
//차필우 출력


window객체란?

-브라우저 안의 모든 요소들이 소속된 객체로, 최상위에 있기 떄문에 어디서든 접근이 가능
-var로 변수를 선언하거나 함수를 선언하면 다 window객체의 프로퍼티가 된다
-변수와 함수를 선언하고 앞에 window를 붙이지 않는데 window는 전역객체로 페이지 내에 있는 모든 객체를 다 포함하고 있기떄문에
  생략이 가능함
-let, const 로 선언한 변수는 블록스코프이기 떄문에 window 객체 내부의 블록에서 선언 된것으로 평가되어 전역객체의 프로퍼티로 될수가 없다

8.지역변수

정의된 블럭내에서만 사용할 수 있는 변수

지역변수 만드는 예)
-var로 함수내에서 선언시 선언된 함수 내에서만 유효
-let로 블럭내에서 선언시 선언된 블럭 내에서만 유효

const로 선언하는 상수는 let과 동일한 변수를 가진다

함수의 본문 내에서 지역 변수는 같은 이름을 가진 전역 변수보다 우선함

변수 범위

변수를 선언하는 방법과 위치에 따라 변수가 사용될수 있는 범위가 결정됨
일반적으로 함수의 바깥에서 선언하면 현재 문서의 전체에서 사용할 수 있는 전역변수
함수 안에서 선언을 하면 선언된 함수 안에서만 사용할 수 있는 지역변수

EX)

name = "차필우"; //함수밖에서 만들었으므로 전역변수

function scope()  //function(함수표현식) 키워드를 사용해서 함수를 선언하고 function 다음에 함수의 이름과 매개변수()를 선언함

      Console.log(name); // 전역변수는 문서 내의 어디서든 사용 가능
      title = "변수범위";  // 범수안에서 만들었지만 선언이 없으므로 전역변수

Console.log(title); //아직 만들어지지않은 변수를 사용으로 오류
scope(); //차필우 출력
Console.log(title); //"변수범위" 출력 함수호출로 title이 전역변수로 만들어짐


let 으로 선언하는 경우 함수 밖에서는 전역변수가 되고 함수 나 "{}" 블록내에서 선언되면 블록 내에서만 유효한 지역변수가 된다

let name = "차필우"; // 전역변수

function scope() {
    let title = "변수범위"; // 블록 안이므로 지역 변수
    if(true){
        let content = "변수의 유효 범위 내용"; // 블록 안이므로 지역변수
        Console.log(title);
    }
    Console.log(content); //에러!! if 블록 안에서 let으로 선언한 content는 if 블록 내에서만 유효함
}

const를 사용한 상수 선언은 let과 동인한 변수 범위를 가진다 함수 밖이면 전역변수 블록안이면 지역변수이다

https://offbyone.tistory.com/447

